output "cluster_id" {
  description = "EKS cluster ID."
  value       = module.eks.cluster_id
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane."
  value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane."
  value       = module.eks.cluster_security_group_id
}

# data "aws_eks_cluster" "cluster" {
#   name = module.eks.cluster_id
# }

# data "aws_eks_cluster_auth" "cluster" {
#   name = module.eks.cluster_id
# }

# output "kubectl_config" {
#    description = "kubectl config as generated by the module."
#    value       = module.eks.kubeconfig
# }

# output "config_map_aws_auth" {
#   description = "A kubernetes configuration to authenticate to this EKS cluster."
#   value       = module.eks.aws_auth_configmap_yaml
# }

# output "region" {
#   description = "AWS region"
#   value       = var.region
# }

output "cluster_name" {
  description = "Kubernetes Cluster Name"
  value       = local.cluster_name
}
output "cluster_name_west" {
  description = "Kubernetes Cluster Name"
  value       = local.cluster_name_west
}

output "mongo_db_ip" {
  description = "Mongo DB IP"
  value = aws_instance.mongodb-ec2-instance.public_ip 
}

output "connect_to_instance" {
  value = "ssh -i ~/.ssh/id_ed25519 ubuntu@$(terraform output -raw mongo_db_ip)"
}

output "connect_to_eks"  {
  value = "aws eks --region us-east-1 update-kubeconfig --name $(terraform output -raw cluster_name) --alias east"
}

output "connect_to_mongodb" {
  value = "mongosh mongodb://<user>:<password>@$(terraform output -raw mongo_db_ip):27017"
}

# aws eks --region us-east-1 update-kubeconfig --name $(terraform output -raw cluster_name) --alias east

# aws eks --region us-west-1 update-kubeconfig --name $(terraform output -raw cluster_name_west) --alias west

# k exec -it vault-0 -- /bin/sh

# kubectl config set-context


